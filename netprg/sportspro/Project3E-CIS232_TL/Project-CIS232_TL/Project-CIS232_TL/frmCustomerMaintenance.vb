Public Class frmCustomerMaintenance
    Private Sub CustomersBindingNavigatorSaveItem_Click(sender As Object, e As EventArgs) Handles CustomersBindingNavigatorSaveItem.Click
        'Me.Validate()
        'Me.CustomersBindingSource.EndEdit()
        'Me.TableAdapterManager.UpdateAll(Me.TechSupportDataSet2B)
        'save changes
        If IsValidData() Then
            Try
                Me.Validate()
                Me.CustomersBindingSource.EndEdit()
                Me.TableAdapterManager.UpdateAll(Me.TechSupportDataSet2B)
            Catch er As FormatException
                MessageBox.Show(er.Message, er.GetType.ToString)
                Me.CustomersBindingSource.CancelEdit()
            Catch er As OleDb.OleDbException
                MessageBox.Show(er.Message, er.GetType.ToString)
                Me.CustomersBindingSource.CancelEdit()
            Catch er As Exception
                MessageBox.Show(er.Message, er.GetType.ToString)
                Me.CustomersBindingSource.CancelEdit()
            End Try
        End If
    End Sub
    Private Function IsValidData() As Boolean
        If CustomersBindingSource.Count > 0 Then
            Return IsPresent(CustomerIDTextBox, "CustomerID") AndAlso
                IsPresent(NameTextBox, "Name") AndAlso
                IsPresent(AddressTextBox, "Address") AndAlso
                IsPresent(CityTextBox, "City") AndAlso
                IsPresent(StateComboBox, "State") AndAlso
                IsPresent(ZipCodeTextBox, "Zip Code") AndAlso
                IsPresent(PhoneTextBox, "Phone Number") AndAlso
                IsPresent(EmailTextBox, "Email Address")
        Else
            Return True
        End If
    End Function
    Private Function IsPresent(ByVal control As Control,
            ByVal name As String) As Boolean
        If control.GetType.ToString = "System.Windows.Forms.TextBox" Then
            Dim textBox As TextBox = CType(control, TextBox)
            If textBox.Text = "" Then
                MessageBox.Show(name & " is a required field.", "Entry Error")
                textBox.Select()
                Return False
            Else
                Return True
            End If
        ElseIf control.GetType.ToString = "System.Windows.Forms.ComboBox" Then
            Dim comboBox As ComboBox = CType(control, ComboBox)
            If comboBox.SelectedIndex = -1 Then
                MessageBox.Show(name & " is a required field.", "Entry Error")
                comboBox.Select()
                Return False
            Else
                Return True
            End If
        End If
        Return False
    End Function

    Private Sub frmCustomerMaintenance_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        Dim b As Binding = ZipCodeTextBox.DataBindings("Text")
        AddHandler b.Format, AddressOf frmMain.FormatZipCode
        AddHandler b.Parse, AddressOf frmMain.UnformatZipCode
        'TODO: This line of code loads data into the 'TechSupportDataSet2B.States' table. You can move, or remove it, as needed.
        Me.StatesTableAdapter.Fill(Me.TechSupportDataSet2B.States)
        'TODO: This line of code loads data into the 'TechSupportDataSet2B.Customers' table. You can move, or remove it, as needed.
        Me.CustomersTableAdapter.Fill(Me.TechSupportDataSet2B.Customers)

    End Sub

    Private Sub FillByCustomerIDToolStripButton_Click(sender As Object, e As EventArgs) Handles FillByCustomerIDToolStripButton.Click
        'parameterized query to search by CustomerID
        Try
            'The following 2 lines dont work
            'Dim CustomerID As Integer = Convert.ToInt32(CustomerIDTextBox.Text)
            'Me.CustomersTableAdapter.FillBy(Me.TechSupportDataSet2A.Customers, CustomerID)
            'The following line is the default one generated by Visual Studio
            Me.CustomersTableAdapter.FillByCustomerID(Me.TechSupportDataSet2B.Customers, CType(CustomerIDToolStripTextBox.Text, Integer))
        Catch er As FormatException
            MessageBox.Show("Customer ID must be an integer", "Entry Error")
            CustomerIDToolStripTextBox.Text = ""
        Catch er As System.Exception
            MessageBox.Show(er.Message, er.GetType.ToString)
            CustomerIDToolStripTextBox.Text = ""
        End Try
    End Sub
    Private Sub btnCancel_Click(sender As Object, e As EventArgs) Handles btnCancel.Click
        'Cancel button
        CustomersBindingSource.CancelEdit()
    End Sub
End Class